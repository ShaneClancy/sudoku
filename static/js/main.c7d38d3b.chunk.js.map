{"version":3,"sources":["index.js"],"names":["App","className","Header","Game","React","Component","href","props","easyOnClick","setState","gameState","difficulty","mediumOnClick","hardOnClick","state","items","diff","this","push","key","Board","value","onClick","inRow","grid","row","val","x","y","i","inCol","col","inSquare","squareNum","xStart","Math","floor","yStart","j","inRowHelper","inColHelper","inSquareHelper","updateChoice","choice","currentChoice","getCurrentChoice","renderChoices","Choices","updateGrid","gridCopy","checkGameOver","checkIfWin","document","getElementsByClassName","length","renderRow","Tile","originalValue","hidden","updateGridParent","counter","pickedInRow","random","includes","Array","from","shift","randomXToRemove","randomYToRemove","win","getId","toString","currentTile","getElementById","lastRedTile","classList","remove","lastGreenTile","add","id","Choice","updateChoiceWithinChoice","oldSelection","renderChoice","ReactDOM","render"],"mappings":"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","file":"static/js/main.c7d38d3b.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nclass App extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"app\">\r\n                <Header />\r\n                <Game />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Header extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"top\">\r\n                <div className=\"nav\">\r\n                    <a className=\"nav-component\" href=\"https://github.com/ShaneClancy/sudoku/blob/master/README.md\">Info</a>\r\n                    <a className=\"nav-component\" href=\"https://sudoku.com/how-to-play/sudoku-rules-for-complete-beginners/\">Help</a>\r\n                    <a className=\"nav-component\" href=\"https://github.com/ShaneClancy/sudoku\">Documentation</a>\r\n                    <div className=\"nav-filler\"></div>\r\n                </div>\r\n                <div className=\"header\">\r\n                    <div className=\"title\">Sudoku</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Game extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { gameState: 'start' , difficulty: 'EASY'};\r\n    }\r\n\r\n    easyOnClick = () => {\r\n        this.setState({ gameState: 'play', difficulty: 'EASY'});\r\n    }\r\n\r\n    mediumOnClick = () => {\r\n        this.setState({ gameState: 'play', difficulty: 'MEDIUM'});\r\n    }\r\n\r\n    hardOnClick = () => {\r\n        this.setState({ gameState: 'play', difficulty: 'HARD'});\r\n    }\r\n\r\n    render() {\r\n        const items = [];\r\n        const diff = this.state.difficulty;\r\n        if (this.state.gameState !== 'start') {\r\n            items.push(<div key={0}></div>);\r\n            items.push(<div key={1}><Board difficulty={diff}/></div>);\r\n            items.push(<div key={2}></div>);\r\n        } else {\r\n            items.push(<button key={0} className=\"difficulty-button\" value={\"EASY\"} onClick={this.easyOnClick}>EASY</button>);\r\n            items.push(<button key={1} className=\"difficulty-button resize-button\" value={\"MEDIUM\"} onClick={this.mediumOnClick}>MEDIUM</button>);\r\n            items.push(<button key={2} className=\"difficulty-button\" value={\"HARD\"} onClick={this.hardOnClick}>HARD</button>);\r\n        }\r\n        return (\r\n            <div className=\"content\">\r\n                {items}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Board extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const modeMap = {\r\n            'EASY' : 40,\r\n            'MEDIUM' : 50,\r\n            'HARD' : 60\r\n        };\r\n        \r\n        let counter = modeMap[this.props.difficulty];\r\n\r\n        let gridCopy = [];\r\n        let pickedInRow = [];\r\n        // randomize initial row\r\n        for (let i = 0; i < 9; i++) {\r\n            let choice = Math.floor((Math.random() * 9) + 1);\r\n            if (!pickedInRow.includes(choice)) { \r\n                pickedInRow.push(choice);\r\n            } else {\r\n                i--;\r\n            }\r\n        }\r\n        gridCopy.push(Array.from(pickedInRow));\r\n        // shift 3 twice\r\n        for (let j = 0; j < 2; j++){\r\n            for (let i = 0; i < 3; i++) {\r\n                let shift = pickedInRow.shift();\r\n                pickedInRow.push(shift);\r\n            }\r\n            gridCopy.push(Array.from(pickedInRow));\r\n        }\r\n\r\n        //shift 1, shift 3, shift 3 (x2) for remaining rows\r\n        for (let j = 0; j < 2; j++) {\r\n            let shift = pickedInRow.shift();\r\n            pickedInRow.push(shift);\r\n            gridCopy.push(Array.from(pickedInRow));\r\n            for (let i = 0; i < 3; i++) {\r\n                let shift = pickedInRow.shift();\r\n                pickedInRow.push(shift);\r\n            }\r\n            gridCopy.push(Array.from(pickedInRow));\r\n            for (let i = 0; i < 3; i++) {\r\n                let shift = pickedInRow.shift();\r\n                pickedInRow.push(shift);\r\n            }\r\n            gridCopy.push(Array.from(pickedInRow));\r\n        }\r\n\r\n        while (counter > 0) {\r\n            let randomXToRemove = Math.floor((Math.random() * 9));\r\n            let randomYToRemove = Math.floor((Math.random() * 9));\r\n            if (gridCopy[randomXToRemove][randomYToRemove] !== 0) {\r\n                gridCopy[randomXToRemove][randomYToRemove] = 0;\r\n                counter -= 1;\r\n            }\r\n        }\r\n        \r\n        this.state = ( { grid : gridCopy, currentChoice: 0 } );\r\n\r\n    }\r\n\r\n    inRow = (grid, row, val, x, y) => {\r\n        for (let i = 0; i < 9; i++) {\r\n            if (grid[row][i] === val) { return true; }\r\n        } \r\n        return false;\r\n    }\r\n\r\n    inCol = (grid, col, val, x, y) => {\r\n        for (let i = 0; i < 9; i++) {\r\n            if (grid[i][col] === val) { return true; }\r\n        } \r\n        return false;\r\n    }\r\n\r\n    inSquare = (grid, squareNum, val, x , y) => {\r\n        let xStart = Math.floor((squareNum - 1) % 3) * 3;\r\n        let yStart = Math.floor((squareNum - 1) / 3) * 3;\r\n\r\n        for (let i = xStart; i < xStart + 3; i++) {\r\n            for (let j = yStart; j < yStart + 3; j++) {\r\n                if (grid[i][j] === val && x !== i && y !== j) { return true; }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    inRowHelper = (x, y, val) => {\r\n        for (let i = 0; i < 9; i++) {\r\n            if (this.state.grid[x][i] === val && i !== y) { return [x,i]; }\r\n        } \r\n        return [-1,-1];    \r\n    }\r\n\r\n    inColHelper = (x, y, val) => {\r\n        for (let i = 0; i < 9; i++) {\r\n            if (this.state.grid[i][y] === val && i !== x) { return [i,y]; }\r\n        }\r\n        return [-1,-1];\r\n    }\r\n\r\n    inSquareHelper = (x, y, val) => {\r\n        let squareNum = Math.floor(x / 3) + (Math.floor(y / 3) * 3) + 1;\r\n        let xStart = Math.floor((squareNum - 1) % 3) * 3;\r\n        let yStart = Math.floor((squareNum - 1) / 3) * 3;\r\n\r\n        for (let i = xStart; i < xStart + 3; i++) {\r\n            for (let j = yStart; j < yStart + 3; j++) {\r\n                if (this.state.grid[i][j] === val && x !== i && y !== j) { return [i,j]; }\r\n            }\r\n        }\r\n        return [-1,-1];\r\n    }\r\n\r\n    updateChoice = (choice) => {\r\n        this.setState( {currentChoice: choice });\r\n    }\r\n\r\n    getCurrentChoice = () => {\r\n        return this.state.currentChoice;\r\n    }\r\n\r\n    renderChoices = () => {\r\n        return <Choices currentChoice={this.state.currentChoice} updateChoice={this.updateChoice} getCurrentChoice={this.getCurrentChoice}/>\r\n    }\r\n\r\n    updateGrid = (x,y) => {\r\n        let gridCopy = this.state.grid;\r\n        gridCopy[x][y] = this.getCurrentChoice();\r\n        this.setState( { grid: gridCopy, currentChoice: this.state.currentChoice });\r\n    }\r\n\r\n    checkGameOver = () => {\r\n        for (let i = 0; i < 9; i++) {\r\n            for (let j = 0; j < 9; j++) {\r\n                if (this.state.grid[i][j] === 0) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    checkIfWin = () => {\r\n        if (this.checkGameOver() === true && document.getElementsByClassName('red').length === 0 ) {\r\n            return true;\r\n        } else { \r\n            return false \r\n        }\r\n    }\r\n\r\n    renderRow = (i) => {\r\n        const items = [];\r\n\r\n        for (let j = 0; j < 9; j++) {\r\n            items.push(<Tile key={(i)*(9) + j} x={i} y={j} value={this.state.grid[i][j]} originalValue={this.state.grid[i][j]} hidden={false} getCurrentChoice={this.getCurrentChoice} updateGridParent={this.updateGrid} inRowHelper={this.inRowHelper} inColHelper={this.inColHelper} inSquareHelper={this.inSquareHelper}/>);\r\n        }\r\n\r\n        return items;\r\n    }\r\n\r\n    render() {\r\n\r\n        let win = '';\r\n        if (this.checkGameOver() === true && this.checkIfWin() === true) {\r\n            win = 'You Won!'\r\n        }\r\n        return  (\r\n            <div className=\"content-container\">\r\n                <div>\r\n                    <p className=\"game-state\">{win}</p>\r\n                </div>\r\n                <div className=\"game-board\">\r\n                    <div className=\"board-row\"> {this.renderRow(0)} </div>\r\n                    <div className=\"board-row\"> {this.renderRow(1)} </div>\r\n                    <div className=\"board-row\"> {this.renderRow(2)} </div>\r\n                    <div className=\"board-row\"> {this.renderRow(3)} </div>\r\n                    <div className=\"board-row\"> {this.renderRow(4)} </div>\r\n                    <div className=\"board-row\"> {this.renderRow(5)} </div>\r\n                    <div className=\"board-row\"> {this.renderRow(6)} </div>\r\n                    <div className=\"board-row\"> {this.renderRow(7)} </div>\r\n                    <div className=\"board-row\"> {this.renderRow(8)} </div>\r\n                </div>\r\n                <div className=\"choices\">\r\n                    {this.renderChoices()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Tile extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        if (this.props.hidden === false || this.props.value === 0) { this.state =  { value: this.props.value, hidden : false }; }\r\n        else {  this.state = { value: this.props.value, hidden : true }; }\r\n    }\r\n\r\n    getId = () => {\r\n        return (\"tile\" + this.props.x.toString() + \".\" + this.props.y.toString());\r\n    }\r\n\r\n    getCurrentChoice = () => {\r\n        return this.props.getCurrentChoice();\r\n    }\r\n\r\n    inRowHelper = () => {\r\n        return this.props.inRowHelper(this.props.x, this.props.y, this.props.getCurrentChoice());\r\n    }\r\n\r\n    inColHelper = () => {\r\n        return this.props.inColHelper(this.props.x, this.props.y, this.props.getCurrentChoice());\r\n    }\r\n\r\n    inSquareHelper = () => {\r\n        return this.props.inSquareHelper(this.props.x, this.props.y, this.props.getCurrentChoice());\r\n    }\r\n\r\n    onClick = () => {\r\n        const currentTile = document.getElementById(this.getId());\r\n        // Remove previous choice color\r\n        let lastRedTile = document.getElementsByClassName(\"red\");\r\n        if (lastRedTile.length > 0) {\r\n            lastRedTile[0].classList.remove(\"red\");\r\n        }\r\n        let lastGreenTile = document.getElementsByClassName(\"green\");\r\n        if (lastGreenTile.length > 0) {\r\n            lastGreenTile[0].classList.remove(\"green\");\r\n        }\r\n        // Updte value on Tile\r\n        if (this.props.originalValue === 0 && this.getCurrentChoice() !== 0) {\r\n            this.setState( {value: this.getCurrentChoice(), hidden: false })\r\n            this.props.updateGridParent(this.props.x, this.props.y);\r\n\r\n            if (this.inRowHelper()[0] === -1 && this.inColHelper()[0] === -1 && this.inSquareHelper()[0] === -1) {\r\n                currentTile.classList.add(\"green\");\r\n            } else {\r\n                currentTile.classList.add(\"red\");\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hidden === true || this.state.value === 0) {\r\n            return (\r\n                <button id={this.getId()} className=\"tile\" onClick={this.onClick}><br></br></button>\r\n            );\r\n        } else {\r\n            return (\r\n                <button id={this.getId()} className='tile' onClick={this.onClick}>\r\n                    {this.state.value}\r\n                </button>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nclass Choice extends React.Component {\r\n\r\n    updateChoiceWithinChoice = () => {\r\n        this.props.updateChoice(this.props.value);\r\n        const choice = document.getElementById(\"choice\" + this.props.value);\r\n        let oldSelection = document.getElementsByClassName(\"highlighted\");\r\n        if (oldSelection.length > 0) {\r\n            oldSelection[0].classList.remove(\"highlighted\");\r\n        }\r\n        choice.classList.add(\"highlighted\");\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <button className=\"choice\" id={\"choice\" + this.props.value} onClick={this.updateChoiceWithinChoice}>\r\n                {this.props.value}\r\n            </button>\r\n        )\r\n    }\r\n}\r\n\r\nclass Choices extends React.Component {\r\n\r\n    renderChoice = (i) => {\r\n        var updateChoice = this.props.updateChoice;\r\n        return <Choice value={i} updateChoice={updateChoice}/>\r\n    }\r\n\r\n    render() {\r\n        const items = [];\r\n        \r\n        for (let i = 1; i <= 9; i++) {\r\n            items.push(<Choice key={i} value={i} updateChoice={this.props.updateChoice}/>)\r\n        }\r\n\r\n        return (\r\n            <div className=\"choices-container\">\r\n                {items}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}